{"version":3,"sources":["serviceWorker.js","components/shared/form/Field.js","components/shared/form/Validation.js","store/modules/user/user.type.js","components/user/user.login.js","store/modules/user/user.action.js","constant/index.js","services/session.js","services/http.js","api/planet/api.js","api/planet/endpoint.js","components/user/user.dashboard.js","store/modules/application/application.type.js","components/shared/Snackbar.js","store/modules/application/application.action.js","App.js","routes/index.js","containers/index.js","store/modules/user/user.reducer.js","store/modules/application/application.reducer.js","store/store.reducer.js","api/user/api.js","api/user/endpoint.js","constant/error.js","store/modules/user/user.saga.js","store/store.saga.js","store/index.js","index.js"],"names":["Boolean","window","location","hostname","match","renderTextField","_ref","label","input","_ref$meta","meta","touched","invalid","error","custom","warning","Object","objectWithoutProperties","react_default","a","createElement","TextField","assign","helperText","REQUIRED","value","trim","undefined","USER_SET_TOKEN","USER_LOADING_STATE","USER_LOGIN","USER_LOGOUT","UserLogin","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSubmit","form","doLogin","state","loading","handleSubmit","Grid","container","component","id","item","xs","sm","md","className","Paper","elevation","square","Avatar","LockOutlined_default","Typography","variant","noValidate","Field","InputField","type","margin","fullWidth","name","autoComplete","autoFocus","validate","disabled","Button","color","CircularProgress","size","profile","history","push","objectSpread","React","Component","connect","store","user","payload","reduxForm","methods","colors","cookies","Cookies","Session","cname","cvalue","expires","Date","moment","add","document","cookie","data","arguments","length","sessionStorage","setItem","JSON","stringify","localStorage","setCookie","getItem","get","parse","removeItem","remove","axios","interceptors","request","use","config","token","session","headers","Authorization","concat","Promise","reject","response","statusCode","status","message","HTTP","method","url","resolve","_request","defineProperty","toUpperCase","Content-Type","then","catch","__api_searchPlanets","http","Request","UserDashboard","logout","clear","href","onChange","evt","setState","search","target","results","planets","max","getMaxPopulation","Math","apply","map","o","parseInt","population","setWidth","w","_this2","_this$state","Fragment","react_debounce_input_lib","element","minLength","debounceTimeout","planet","idx","user_dashboard_Row","key","Container","maxWidth","onClick","PureComponent","Row","style","width","backgroundColor","APP_NOTIFICATION","CLEAR_APP_ERROR","Snack","handleClose","event","reason","clearError","open","Snackbar","anchorOrigin","vertical","horizontal","onClose","autoHideDuration","ContentProps","aria-describedby","random","SnackbarContent","mapDispatchToProps","application","App","user_dashboard","user_login","shared_Snackbar","AppRouter","lib","react_router","exact","path","es","routes_AppRouter","initialState","rootReducer","combineReducers","router","connectRouter","createHistory","formReducer","action","__api_doLogin","q","username","CONNECTION_FAILED","doLoginRegister","watchUser","regenerator_default","wrap","_context","prev","next","put","sent","count","toLowerCase","birth_year","password","set","t0","stop","_marked","_context2","takeLatest","_marked2","Sagas","delegateYield","store_saga_marked","sagaMiddleware","createSagaMiddleware","middleware","applyMiddleware","routerMiddleware","createStore","Reducer","compose","run","Saga","appStore","ReactDOM","render","react_router_dom","containers","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e1b66e00.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport TextField from '@material-ui/core/TextField';\n\nexport const renderTextField = ({\n    label,\n    input,\n    meta: { touched, invalid, error, warning },\n    ...custom\n  }) => <TextField label={label} error={touched && invalid} helperText={touched && error} {...input} {...custom} />;","export const REQUIRED = value => (value || typeof value === 'number' ? (typeof value === 'string' && value.trim() === \"\" ? 'Spaces are not allowed as value!' : undefined) : 'This field is required!');","export const USER_SET_TOKEN = \"USER_SET_TOKEN\";\nexport const USER_LOADING_STATE = \"USER_LOADING_STATE\";\nexport const USER_LOGIN = \"USER_LOGIN\";\nexport const USER_LOGOUT = \"USER_LOGOUT\";\n","import React from 'react';\nimport { reduxForm, Field } from \"redux-form\";\nimport { connect } from \"react-redux\";\n/* importing material */\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\n/* importing components */\nimport { renderTextField as InputField } from \"../shared/form/Field\";\nimport { REQUIRED } from \"../shared/form/Validation\";\n/* importing actions */\nimport { doLogin } from \"../../store/modules/user/user.action\";\n/* importing css */\nimport \"./style.css\";\n\nconst form = \"loginForm\";\n\nclass UserLogin extends React.Component{\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            loading: false\n        }\n    }\n\n    static getDerivedStateFromProps(props, state){\n        if(props.profile){\n            props.history.push(\"/\");\n            return {...state}\n        }else if(props.loading !== state.loading){\n            return {...state, loading: props.loading}\n        }else{\n            return state;\n        }\n    }\n\n    onSubmit = (form) => {\n        this.props.doLogin(form);\n    }\n    \n    render(){\n        const { handleSubmit } = this.props, {loading} = this.state;\n        return (\n            <Grid container component=\"main\" id=\"main\">\n                <Grid item xs={false} sm={4} md={7} className=\"left-image\" />\n                <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n                    <div className=\"paper\">\n                        <Avatar className=\"avatar\">\n                            <LockOutlinedIcon />\n                        </Avatar>\n                        <Typography component=\"h1\" variant=\"h5\">\n                            Sign in\n                        </Typography>\n                        <form className=\"login-form\" noValidate id={form} onSubmit={handleSubmit(this.onSubmit)}>\n                            \n                            <Field component={InputField} type=\"text\" variant=\"outlined\" margin=\"normal\" fullWidth id=\"username\" label=\"Username\" name=\"username\" autoComplete=\"username\" autoFocus validate={[REQUIRED]} disabled={loading}/>\n\n                            <Field component={InputField} type=\"password\" variant=\"outlined\" margin=\"normal\" fullWidth id=\"password\" label=\"Password\" name=\"password\" validate={[REQUIRED]} disabled={loading}/>\n                            \n                            <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className=\"submit-btn\" disabled={loading}>\n                                Sign In &nbsp;{loading && <CircularProgress size={24}/>}\n                            </Button>\n                        </form>\n                    </div>\n                </Grid>\n            </Grid>\n        );\n  }\n}\n\nconst mapStateToProps = store => ({\n    loading: store.user.loading || false,\n    profile: store.user.profile || undefined,\n});\n\nexport default connect(mapStateToProps, { doLogin })(reduxForm({form})(UserLogin));","import { USER_LOGIN, USER_LOGOUT } from \"./user.type\";\n\nexport const doLogin = (payload) => ({type: USER_LOGIN, payload });\nexport const doLogout = () => ({type: USER_LOGOUT});\n","export const apiPath = \"https://swapi.co/api/\";\n\nexport const methods = {\n    GET: \"GET\",\n    POST: \"POST\",\n    PUT: \"PUT\",\n    DELETE: \"DELETE\"\n}\n\nexport const colors = [\"green\", \"red\", \"blue\", \"voilet\", \"orange\", \"pink\", \"navy\", \"teal\", \"brown\", \"grey\"];","import Cookies from 'universal-cookie';\nimport moment from 'moment';\nconst cookies = new Cookies();\n\nexport default class Session {\n\n\tstatic setCookie(cname, cvalue) {\n\t\tlet expires = new Date(moment().add(3, \"d\"));\n\t\tdocument.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\n\t}\n\t\n\tstatic set(cookie, data, type = 'cookie'){\n\t\tif (type ==='session'){\n\t\t\t/**set data into session storage */\n\t\t\tsessionStorage.setItem(cookie, JSON.stringify(data));\n\t\t} else if (type === 'localstorage') {\n\t\t\t/**set data into local storage */\n\t\t\tlocalStorage.setItem(cookie, JSON.stringify(data));\n\t\t} else{\n\t\t\t/** set data into cookies */\n\t\t\tif(typeof data === 'string'){\n\t\t\t\tthis.setCookie(cookie, data);\n\t\t\t}else{\n\t\t\t\tthis.setCookie(cookie, JSON.stringify(data));\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tstatic get(cookie, type = 'cookie'){\n\t\tlet data;\n\n\t\tif (type === 'session') {\n\t\t\t/** get data from session storage */\n\t\t\tdata = sessionStorage.getItem(cookie);\n\t\t} else if (type === 'localstorage') {\n\t\t\t/** get data from local storage */\n\t\t\tdata = localStorage.getItem(cookie);\n\t\t} else{\n\t\t\t/** get data from cookies */\n\t\t\tdata = cookies.get(cookie);\n\t\t\t\n\t\t}\n\n\t\ttry {\n\t\t\treturn data ? JSON.parse(data) : '';\t\n\t\t} catch (error) {\n\t\t\treturn data || '';\n\t\t}\n\t\t\n\t\t\n\t}\n\n\tstatic clear(cookie, type = 'cookie'){\n\t\tif (type === 'session') {\n\t\t\t/** remove data from session storage */\n\t\t\tsessionStorage.removeItem(cookie);\n\t\t} else if (type === 'localstorage') {\n\t\t\t/** remove data from session storage */\n\t\t\tlocalStorage.removeItem(cookie);\n\t\t} else{\n\t\t\t/** remove data from cookies */\n\t\t\tcookies.remove(cookie);\n\t\t}\n\n\t\treturn true;\n\t}\n}\n","import axios from 'axios';\nimport session from \"./session\";\nimport {apiPath as endpoint} from \"../constant\";\n/*Setting up interceptors with axios*/\n/*it supports add/remove interceptors - 2017dec*/\n// Add a request interceptor\naxios.interceptors.request.use(function (config) {\n    // Do something before request is sent\n    let token;\n    token = session.get(\"token\");\n\n    if (token) {\n        /** appending auth token */\n        config.headers = { \"Authorization\": `bearer ${token.token}` }\n    }\n\n    return config;\n}, function (error) {\n    // Do something with request error\n    return Promise.reject(error);\n})\n\n// Add a response interceptor\naxios.interceptors.response.use(function (response) {\n    // Do something with response data\n    return {\n        statusCode: response.status,\n        data: (typeof response.data === 'boolean' && response.data === false ? 'false' : response.data) || []\n    };\n}, function (error) {\n    if (!error.response && error.message === 'Network Error') {\n        return Promise.reject(\"Couldn't connect to server. Please try again later.\");\n    }\n    // Do something with response error\n    return Promise.reject(error.response.data || \"Server Connection Failed\");\n});\n\n\nexport default class HTTP {\n    static Request(method, url, data = null) {\n        return new Promise((resolve, reject) => {\n            let request = {\n                method,\n                url: endpoint+url,\n                [method.toUpperCase() === 'GET' ? \"params\" : \"data\"]: data,\n                headers: { 'Content-Type': 'application/json' }\n            };\n\n            axios(request) .then(response => resolve(response)) .catch(error => reject(error));\n        });\n    }\n}","import http from \"../../services/http\";\nimport {methods} from \"../../constant\";\nimport { __endpoint_searchPlanets } from \"./endpoint\";\n\nexport const __api_searchPlanets = payload => http.Request(methods.GET, __endpoint_searchPlanets, payload);\n","/* planel  */\nexport const __endpoint_searchPlanets = \"planets/\";\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { colors } from \"../../constant\";\nimport session from \"../../services/session\";\n/* importing material */\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport {DebounceInput} from 'react-debounce-input';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\n\n/* importing api */\nimport { __api_searchPlanets } from \"../../api/planet/api\";\n/* importing css */\nimport \"./style.css\";\n\nconst form = \"loginForm\";\n\nclass UserDashboard extends React.PureComponent{\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            loading: false,\n            search: \"\",\n            planets: [],\n            max: 0\n        }\n    }\n\n   /*  static getDerivedStateFromProps(props, state){\n        if(props.loading !== state.loading){\n            return {...state, loading: props.loading}\n        }else{\n            return state;\n        }\n    } */\n\n    logout = () => {\n        session.clear(\"profile\");\n        window.location.href = \"/\";\n    }\n\n    onChange = (evt) => {\n        this.setState({ search: evt.target.value, loading: true })\n        __api_searchPlanets({ search: evt.target.value})\n        .then(response => {\n            if(response.data && response.data.results){\n                this.setState({ planets: response.data.results, max: this.getMaxPopulation(response.data.results), loading: false });\n            }\n        })        \n    }\n\n    getMaxPopulation = (planets) => Math.max.apply(Math, planets.map(o => (parseInt(o.population) || 0)));\n\n    setWidth = (population) => {\n        let w = (parseInt(population)/this.state.max)*100;\n        return w >= 100 ? \"100%\" : `${w}%`;\n    }\n    \n    render(){\n        let { planets, loading, search } = this.state;\n        return (\n            <React.Fragment>\n                <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n                    <div className=\"paper\">\n                        <Typography component=\"h1\" variant=\"h5\">\n                            Search for Planets...\n                        </Typography>\n                        <form className=\"login-form\" noValidate id={form}>\n                            <DebounceInput element={TextField} minLength={1} debounceTimeout={300} type=\"text\" variant=\"outlined\" margin=\"normal\" fullWidth id=\"planet\" label=\"Planet\" name=\"search\" onChange={this.onChange}/>\n                        </form>\n                    </div>\n                </Grid>\n                <Grid item xs={false} sm={4} md={7} className=\"left-image relative\">\n                    <div className='overlayer'>\n                        {loading && <CircularProgress />}\n                        {search && !loading && <div className=\"planets\">\n                            {planets.map((planet, idx) => <Row key={planet.name} idx={idx} planet={planet} setWidth={this.setWidth} />)}\n                        </div>}\n                    </div>\n\n                    <footer >\n                        <Container maxWidth=\"sm\">\n                            <Button type=\"button\" fullWidth variant=\"contained\" color=\"primary\" className=\"submit-btn\" onClick={this.logout}>\n                                Logout\n                            </Button>\n                        </Container>\n                    </footer>\n                </Grid>\n            </React.Fragment>\n        );\n  }\n}\n\nconst Row = ({planet, idx, setWidth}) => {\n    return(\n        <div className=\"rowcont\">\n            <div className=\"planet-title\">&nbsp;{planet.name} &nbsp;<small>Total Population: {planet.population}</small></div>\n            <div className=\"planet-color\" style={{width: setWidth(planet.population), backgroundColor: colors[idx]}} key={planet.name}></div> \n        </div>\n    );\n}\nconst mapStateToProps = store => ({\n    loading: store.user.loading || false,\n    profile: store.user.profile || undefined,\n});\n\nexport default connect(mapStateToProps)(UserDashboard);","export const SET_LOADING_STATE = \"SET_LOADING_STATE\";\nexport const APP_NOTIFICATION = \"APP_NOTIFICATION\";\nexport const CLEAR_APP_ERROR = \"CLEAR_APP_ERROR\";\n","import React from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { connect } from \"react-redux\";\nimport { clearError } from \"../../store/modules/application/application.action\";\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\n\nclass Snack extends React.Component{\n    constructor(props){\n        super(props);\n\n        this.state = { open: false };\n    }\n\n    handleClose = (event, reason) => {\n        if (reason === 'timeout') { \n            this.props.clearError();\n        }\n    };\n\n    static getDerivedStateFromProps(props, state){\n        if(props.error && props.error.message){\n            return {open:true}\n        }else{\n            return {open:false};\n        }\n    }\n\n    render(){\n        return (\n            <Snackbar\n                anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n                open={this.state.open}\n                onClose={this.handleClose}\n                autoHideDuration={6000}\n                ContentProps={{ 'aria-describedby': Math.random()+'id' }}\n            >\n                <SnackbarContent \n                    style={{ backgroundColor: this.props.error.type }}\n                    message={<span id=\"client-snackbar\">{this.props.error.message}</span>}\n                />\n            </Snackbar>\n          );\n    }\n}\n\nconst mapStateToProps = store => ({ error: store.application.error });\n\nconst mapDispatchToProps = { clearError };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Snack);\n","import { CLEAR_APP_ERROR } from \"./application.type\";\n\nexport const clearError = () => ({type: CLEAR_APP_ERROR});\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport {connect} from 'react-redux';\n\n/* importing components */\nimport UserLogin from \"./components/user/user.login\";\nimport UserDashboard from \"./components/user/user.dashboard\";\nimport Snackbar from \"./components/shared/Snackbar\";\nimport \"./App.css\";\n\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n\n    this.state = {\n      profile: null\n    }\n  }\n\n  static getDerivedStateFromProps(props, state){\n    if(!props.profile){\n      /* if user is not logged in  */\n      props.history.push(\"/login\");\n      return null;\n    }else{\n      return {profile: props.profile};\n    }\n  }\n\n  render(){\n    let {profile} = this.props;\n\n    return (\n      <Grid container component=\"main\" id=\"main\">\n          {profile ? <UserDashboard /> : <UserLogin />}\n          <Snackbar />\n      </Grid>\n    );\n  }\n}\n\nconst mapStateToProps = store => ({\n  profile: store.user.profile || undefined,\n});\n\nexport default connect(mapStateToProps)(App);","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport { ConnectedRouter } from \"connected-react-router\";\n\nimport App from '../App';\nimport UserLogin from '../components/user/user.login';\n\nexport default class AppRouter extends React.Component {\n    render() {return (\n            <ConnectedRouter history={this.props.history}>      \n                <Switch>\n                    <Route exact path=\"/\" component={App} />\n                    <Route exact path=\"/login\" component={UserLogin} />\n                </Switch>\n            </ConnectedRouter>\n        );\n    }\n}\n\n","import React from \"react\";\nimport {Provider} from \"react-redux\";\n\nimport AppRoutes from \"../routes\";\n\nconst container = ({store, history}) => {\n    return <Provider store={store}>\n        <AppRoutes history={history}/>\n    </Provider>;\n};\nexport default container; ","/* importing types */\nimport { USER_SET_TOKEN, USER_LOADING_STATE, USER_LOGOUT } from \"./user.type\";\nimport session from \"../../../services/session\";\n\nconst initialState = {\n    loading: false,\n    profile: session.get(\"profile\") || undefined\n}\n\nexport default function User(state=initialState, action){\n    switch(action.type){\n        case USER_LOADING_STATE: \n            return {...state, loading: action.loading};\n        case USER_LOGOUT: \n            return {...state, profile: undefined};\n        case USER_SET_TOKEN: \n            return {...state, loading: action.loading, profile: action.data};\n        default: \n            return state;\n    }\n}\n","import { APP_NOTIFICATION, CLEAR_APP_ERROR } from \"./application.type\";\n\nlet initialState = {\n    error: {\n        message: \"\",\n        type: \"blue\"\n    }\n}\n\nexport default function application(state=initialState, action){\n    switch(action.type){\n        case APP_NOTIFICATION:\n            return {...state, error: action.error};\n        case CLEAR_APP_ERROR:\n            return {...state, error: \"\"};\n        default:\n            return state;\n    }\n}\n","import { combineReducers } from \"redux\";\nimport { connectRouter } from \"connected-react-router\";\nimport {createBrowserHistory as createHistory} from \"history\";\nimport { reducer as formReducer } from \"redux-form\";\n\nimport user from \"./modules/user/user.reducer\";\nimport application from \"./modules/application/application.reducer\";\n\nconst rootReducer = combineReducers({\n    router: connectRouter(createHistory()),\n    form: formReducer,\n    user,\n    application\n});\n\nexport default rootReducer;","import http from \"../../services/http\";\nimport {methods} from \"../../constant\";\nimport { __endpoint_doLogin } from \"./endpoint\";\n\nexport const __api_doLogin = payload => {\n    let q = {search: payload.username};\n    return http.Request(methods.GET, __endpoint_doLogin, q)\n};\n","/* user  */\nexport const __endpoint_doLogin = \"people/\";\n","export const CONNECTION_FAILED = \"Couldn't connect with server\";","import { call, put, takeLatest } from \"redux-saga/effects\";\n/* importing types */\nimport { USER_LOGIN, USER_LOADING_STATE, USER_SET_TOKEN } from \"./user.type\";\nimport { APP_NOTIFICATION } from \"../application/application.type\";\n/* importing api */\nimport { __api_doLogin } from \"../../../api/user/api\";\n/* importinh helpers */\nimport session from \"../../../services/session\";\nimport { CONNECTION_FAILED } from \"../../../constant/error\";\n\nfunction* doLoginRegister(action){\n    yield put({ type: USER_LOADING_STATE, loading: true });\n    try {\n        const {data} = yield call(__api_doLogin, action.payload);\n\n        /* register user token to cookie */\n        if(data && data.count === 1){\n            let user = data.results[0];\n            if(user && user.name && user.name.toLowerCase() !== action.payload.username.toLowerCase()){\n                /* password matched */\n                yield put({ type: APP_NOTIFICATION, error: {message: \"User doesn't exists\", type:\"red\"} });   \n            }else if(user && user.birth_year && user.birth_year === action.payload.password){\n                /* password matched */\n                yield put({ type: APP_NOTIFICATION, error: {message: \"You've been loggedin successfully\", type:\"green\"} });   \n                yield put({ type: USER_SET_TOKEN, loading: false, data });\n                /* user registered && token received */\n                session.set(\"profile\", user);\n            }else{\n                /* password not matched case */\n                yield put({ type: APP_NOTIFICATION, error: {message: \"You've entered incorrect password\", type:\"red\"} });        \n            }\n        }else{\n            yield put({ type: APP_NOTIFICATION, error: {message: \"User doesn't exists\", type:\"red\"} });    \n        }\n        \n    } catch (error) {\n        yield put({ type: USER_LOADING_STATE, loading: false });\n        yield put({ type: APP_NOTIFICATION, error: {message: (error && error.message) || CONNECTION_FAILED, type:\"red\"} });\n        \n    }\n}\n\n/**\n * map the dispatched action to the above function\n */\nexport default function* watchUser() {\n    yield takeLatest(USER_LOGIN, doLoginRegister);\n}\n","import watchUser from \"./modules/user/user.saga\";\n\nexport default function* Sagas(){\n\tyield *[watchUser()];\n}","import {compose, createStore, applyMiddleware}  from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { routerMiddleware } from \"react-router-redux\";\n\n// reducer\nimport Reducer from \"./store.reducer\";\n// saga\nimport Saga from \"./store.saga\";\n\nconst store = (history) => {\n    const sagaMiddleware = createSagaMiddleware();\n    let middleware = applyMiddleware(routerMiddleware(history), sagaMiddleware);\n\n    let store = createStore(Reducer, compose(middleware));\n\n    sagaMiddleware.run(Saga);\n\n    return store;\n}\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport {createBrowserHistory as createHistory} from \"history\";\nimport * as serviceWorker from './serviceWorker';\n\n// adding app container\nimport Container from \"./containers\";\n\n// import store\nimport appStore from \"./store\";\nconst history = createHistory();\nconst store = appStore(history);\n\nReactDOM.render(\n        <Router>\n            <Container store={store} history={history} />\n        </Router>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}