{"version":3,"sources":["serviceWorker.js","components/shared/form/Field.js","store/modules/application/application.type.js","components/shared/Snackbar.js","store/modules/application/application.action.js","components/shared/form/Validation.js","store/modules/user/user.type.js","components/user/user.login.js","store/modules/user/user.action.js","constant/index.js","services/session.js","services/http.js","api/planet/api.js","api/planet/endpoint.js","components/user/user.dashboard.js","App.js","routes/index.js","containers/index.js","store/modules/user/user.reducer.js","store/modules/application/application.reducer.js","store/store.reducer.js","api/user/api.js","api/user/endpoint.js","constant/error.js","store/modules/user/user.saga.js","store/store.saga.js","store/index.js","index.js"],"names":["Boolean","window","location","hostname","match","renderTextField","_ref","label","input","_ref$meta","meta","touched","invalid","error","custom","warning","Object","objectWithoutProperties","react_default","a","createElement","TextField","assign","helperText","APP_NOTIFICATION","CLEAR_APP_ERROR","Snack","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClose","event","reason","clearError","state","open","Snackbar","anchorOrigin","vertical","horizontal","onClose","autoHideDuration","ContentProps","aria-describedby","SnackbarContent","style","backgroundColor","type","message","id","React","Component","mapDispatchToProps","connect","application","REQUIRED","value","trim","undefined","USER_SET_TOKEN","USER_LOADING_STATE","USER_LOGIN","USER_LOGOUT","UserLogin","onSubmit","form","doLogin","loading","handleSubmit","container","component","className","Avatar","LockOutlined_default","Typography","variant","noValidate","Field","InputField","margin","fullWidth","name","autoComplete","autoFocus","validate","disabled","Button","color","CircularProgress","size","shared_Snackbar","profile","history","push","objectSpread","store","user","payload","reduxForm","methods","colors","cookies","Cookies","Session","cname","cvalue","expires","Date","moment","add","document","cookie","data","arguments","length","sessionStorage","setItem","JSON","stringify","localStorage","setCookie","getItem","get","parse","removeItem","remove","axios","interceptors","request","use","config","token","session","headers","Authorization","concat","Promise","reject","response","statusCode","status","HTTP","method","url","resolve","_request","defineProperty","toUpperCase","Content-Type","then","catch","__api_searchPlanets","http","Request","UserDashboard","logout","clear","href","onChange","evt","setState","search","target","results","planets","max","getMaxPopulation","setNotification","err","Math","apply","map","o","parseInt","population","setWidth","w","_this2","_this$state","Fragment","Grid","item","xs","sm","md","Paper","elevation","square","onClick","react_debounce_input_lib","element","minLength","debounceTimeout","planet","idx","user_dashboard_Row","key","PureComponent","Row","width","App","user_dashboard","user_login","AppRouter","lib","react_router","exact","path","es","routes_AppRouter","initialState","rootReducer","combineReducers","router","connectRouter","createHistory","formReducer","action","__api_doLogin","q","username","CONNECTION_FAILED","doLoginRegister","watchUser","regenerator_default","wrap","_context","prev","next","put","sent","count","toLowerCase","birth_year","password","set","t0","stop","_marked","_context2","takeLatest","_marked2","Sagas","delegateYield","store_saga_marked","sagaMiddleware","createSagaMiddleware","middleware","applyMiddleware","routerMiddleware","createStore","Reducer","compose","run","Saga","appStore","ReactDOM","render","react_router_dom","containers","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"yOAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,0OCfOC,EAAkB,SAAAC,GAAA,IAC3BC,EAD2BD,EAC3BC,MACAC,EAF2BF,EAE3BE,MAF2BC,EAAAH,EAG3BI,KAAQC,EAHmBF,EAGnBE,QAASC,EAHUH,EAGVG,QAASC,EAHCJ,EAGDI,MACvBC,GAJwBL,EAGMM,QAHNC,OAAAC,EAAA,EAAAD,CAAAV,EAAA,kCAKvBY,EAAAC,EAAAC,cAACC,EAAA,EAADL,OAAAM,OAAA,CAAWf,MAAOA,EAAOM,MAAOF,GAAWC,EAASW,WAAYZ,GAAWE,GAAWL,EAAWM,cCP5FU,EAAmB,mBACnBC,EAAkB,2BCIzBC,cACF,SAAAA,EAAYC,GAAM,IAAAC,EAAA,OAAAZ,OAAAa,EAAA,EAAAb,CAAAc,KAAAJ,IACdE,EAAAZ,OAAAe,EAAA,EAAAf,CAAAc,KAAAd,OAAAgB,EAAA,EAAAhB,CAAAU,GAAAO,KAAAH,KAAMH,KAKVO,YAAc,SAACC,EAAOC,GACH,YAAXA,GACAR,EAAKD,MAAMU,cALfT,EAAKU,MAAQ,CAAEC,MAAM,GAHPX,wEAqBd,OACIV,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CACIC,aAAc,CAAEC,SAAU,MAAOC,WAAY,SAC7CJ,KAAMT,KAAKQ,MAAMC,KACjBK,QAASd,KAAKI,YACdW,iBAAkB,IAClBC,aAAc,CAAEC,mBAAoB,eAEpC7B,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CACIC,MAAO,CAAEC,gBAAiBpB,KAAKH,MAAMd,MAAMsC,MAC3CC,QAASlC,EAAAC,EAAAC,cAAA,QAAMiC,GAAG,mBAAmBvB,KAAKH,MAAMd,MAAMuC,+DAnBtCzB,EAAOW,GACnC,OAAGX,EAAMd,OAASc,EAAMd,MAAMuC,QACnB,CAACb,MAAK,GAEN,CAACA,MAAK,UAjBLe,IAAMC,WAyCpBC,EAAqB,CAAEnB,WC7CH,iBAAO,CAACc,KAAM1B,KD+CzBgC,oBAJS,SAAAnB,GAAK,MAAK,CAAEzB,MAAOyB,EAAMoB,YAAY7C,QAIrB2C,EAAzBC,CAA6C/B,GEjD/CiC,EAAW,SAAAC,GAAK,OAAKA,GAA0B,kBAAVA,EAAuC,kBAAVA,GAAuC,KAAjBA,EAAMC,OAAgB,wCAAqCC,EAAa,2BCAhKC,EAAiB,iBACjBC,EAAqB,qBACrBC,EAAa,aACbC,EAAc,cCqBrBC,sBAEF,SAAAA,EAAYxC,GAAM,IAAAC,EAAA,OAAAZ,OAAAa,EAAA,EAAAb,CAAAc,KAAAqC,IACdvC,EAAAZ,OAAAe,EAAA,EAAAf,CAAAc,KAAAd,OAAAgB,EAAA,EAAAhB,CAAAmD,GAAAlC,KAAAH,KAAMH,KAkBVyC,SAAW,SAACC,GACRzC,EAAKD,MAAM2C,QAAQD,IAjBnBzC,EAAKU,MAAQ,CACTiC,SAAS,GAJC3C,wEAwBR,IAAE4C,EAAiB1C,KAAKH,MAAtB6C,aAA8BD,EAAWzC,KAAKQ,MAAhBiC,QACtC,OACIrD,EAAAC,EAAAC,cAAA,OAAKqD,WAAS,EAACC,UAAU,OAAOrB,GAAG,QAI3BnC,EAAAC,EAAAC,cAAA,OAAKuD,UAAU,SACXzD,EAAAC,EAAAC,cAACwD,EAAA,EAAD,CAAQD,UAAU,UACdzD,EAAAC,EAAAC,cAACyD,EAAA1D,EAAD,OAEJD,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CAAYJ,UAAU,KAAKK,QAAQ,MAAnC,WAGA7D,EAAAC,EAAAC,cAAA,QAAMuD,UAAU,aAAaK,YAAU,EAAC3B,GAzCnD,YAyC6De,SAAUI,EAAa1C,KAAKsC,WAE1ElD,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,CAAOP,UAAWQ,EAAY/B,KAAK,OAAO4B,QAAQ,WAAWI,OAAO,SAASC,WAAS,EAAC/B,GAAG,WAAW9C,MAAM,WAAW8E,KAAK,WAAWC,aAAa,WAAWC,WAAS,EAACC,SAAU,CAAC7B,GAAW8B,SAAUlB,IAExMrD,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,CAAOP,UAAWQ,EAAY/B,KAAK,WAAW4B,QAAQ,WAAWI,OAAO,SAASC,WAAS,EAAC/B,GAAG,WAAW9C,MAAM,WAAW8E,KAAK,WAAWG,SAAU,CAAC7B,GAAW8B,SAAUlB,IAE1KrD,EAAAC,EAAAC,cAACsE,EAAA,EAAD,CAAQvC,KAAK,SAASiC,WAAS,EAACL,QAAQ,YAAYY,MAAM,UAAUhB,UAAU,aAAac,SAAUlB,GAArG,eACmBA,GAAWrD,EAAAC,EAAAC,cAACwE,EAAA,EAAD,CAAkBC,KAAM,QAMlE3E,EAAAC,EAAAC,cAAC0E,EAAD,0DA1CoBnE,EAAOW,GACnC,OAAGX,EAAMoE,SACLpE,EAAMqE,QAAQC,KAAK,KACZjF,OAAAkF,EAAA,EAAAlF,CAAA,GAAIsB,IACNX,EAAM4C,UAAYjC,EAAMiC,QACtBvD,OAAAkF,EAAA,EAAAlF,CAAA,GAAIsB,EAAX,CAAkBiC,QAAS5C,EAAM4C,UAE1BjC,SAjBKgB,IAAMC,YA+DfE,oBALS,SAAA0C,GAAK,MAAK,CAC9B5B,QAAS4B,EAAMC,KAAK7B,UAAW,EAC/BwB,QAASI,EAAMC,KAAKL,cAAWjC,IAGK,CAAEQ,QCrFnB,SAAC+B,GAAD,MAAc,CAAClD,KAAMc,EAAYoC,aDqFzC5C,CAAsC6C,YAAU,CAACjC,KAjEnD,aAiEwCiC,CAAkBnC,IErF1DoC,EACJ,MAMIC,EAAS,CAAC,QAAS,MAAO,OAAQ,SAAU,SAAU,OAAQ,OAAQ,OAAQ,QAAS,wCCP9FC,EAAU,IAAIC,IAECC,yGAEHC,EAAOC,GACvB,IAAIC,EAAU,IAAIC,KAAKC,MAASC,IAAI,EAAG,MACvCC,SAASC,OAASP,EAAQ,IAAMC,EAAS,IAAMC,EAAU,sCAG/CK,EAAQC,GAAsB,IAAhBjE,EAAgBkE,UAAAC,OAAA,QAAAxD,IAAAuD,UAAA,GAAAA,UAAA,GAAT,SAgB/B,MAfY,YAARlE,EAEHoE,eAAeC,QAAQL,EAAQM,KAAKC,UAAUN,IAC3B,iBAATjE,EAEVwE,aAAaH,QAAQL,EAAQM,KAAKC,UAAUN,IAGzB,kBAATA,EACTtF,KAAK8F,UAAUT,EAAQC,GAEvBtF,KAAK8F,UAAUT,EAAQM,KAAKC,UAAUN,KAIjC,8BAGGD,GAAwB,IAC9BC,EADcjE,EAAgBkE,UAAAC,OAAA,QAAAxD,IAAAuD,UAAA,GAAAA,UAAA,GAAT,SAKxBD,EAFY,YAATjE,EAEIoE,eAAeM,QAAQV,GACX,iBAAThE,EAEHwE,aAAaE,QAAQV,GAGrBV,EAAQqB,IAAIX,GAIpB,IACC,OAAOC,EAAOK,KAAKM,MAAMX,GAAQ,GAChC,MAAOvG,GACR,OAAOuG,GAAQ,kCAMJD,GAAwB,IAAhBhE,EAAgBkE,UAAAC,OAAA,QAAAxD,IAAAuD,UAAA,GAAAA,UAAA,GAAT,SAY3B,MAXa,YAATlE,EAEHoE,eAAeS,WAAWb,GACP,iBAAThE,EAEVwE,aAAaK,WAAWb,GAGxBV,EAAQwB,OAAOd,IAGT,yDC5DTe,KAAMC,aAAaC,QAAQC,IAAI,SAAUC,GAErC,IAAIC,EAQJ,OAPAA,EAAQC,EAAQV,IAAI,YAIhBQ,EAAOG,QAAU,CAAEC,cAAA,UAAAC,OAA2BJ,EAAMA,SAGjDD,GACR,SAAUzH,GAET,OAAO+H,QAAQC,OAAOhI,KAI1BqH,KAAMC,aAAaW,SAAST,IAAI,SAAUS,GAEtC,MAAO,CACHC,WAAYD,EAASE,OACrB5B,MAAgC,mBAAlB0B,EAAS1B,OAAwC,IAAlB0B,EAAS1B,KAAiB,QAAU0B,EAAS1B,OAAS,KAExG,SAAUvG,GACT,OAAKA,EAAMiI,UAA8B,kBAAlBjI,EAAMuC,QAItBwF,QAAQC,OAAOhI,EAAMiI,SAAS1B,MAAQ,4BAHlCwB,QAAQC,OAAO,6DAOTI,wGACFC,EAAQC,GAAkB,IAAb/B,EAAaC,UAAAC,OAAA,QAAAxD,IAAAuD,UAAA,GAAAA,UAAA,GAAN,KAC/B,OAAO,IAAIuB,QAAQ,SAACQ,EAASP,GAAW,IAAAQ,EAChCjB,GAAOiB,EAAA,CACPH,SACAC,IF3CO,wBE2COA,GAFPnI,OAAAsI,EAAA,EAAAtI,CAAAqI,EAGmB,QAAzBH,EAAOK,cAA0B,SAAW,OAASnC,GAH/CpG,OAAAsI,EAAA,EAAAtI,CAAAqI,EAAA,UAIE,CAAEG,eAAgB,qBAJpBH,GAOXnB,KAAME,GAAUqB,KAAK,SAAAX,GAAQ,OAAIM,EAAQN,KAAYY,MAAM,SAAA7I,GAAK,OAAIgI,EAAOhI,gBC5C1E8I,GAAsB,SAAAtD,GAAO,OAAIuD,GAAKC,QAAQtD,ECHnB,WDG0DF,IEmB5FyD,eAEF,SAAAA,EAAYnI,GAAM,IAAAC,EAAA,OAAAZ,OAAAa,EAAA,EAAAb,CAAAc,KAAAgI,IACdlI,EAAAZ,OAAAe,EAAA,EAAAf,CAAAc,KAAAd,OAAAgB,EAAA,EAAAhB,CAAA8I,GAAA7H,KAAAH,KAAMH,KAUVoI,OAAS,WACLvB,EAAQwB,MAAM,WACd/J,OAAOC,SAAS+J,KAAO,KAbTrI,EAgBlBsI,SAAW,SAACC,GACRvI,EAAKwI,SAAS,CAAEC,OAAQF,EAAIG,OAAO1G,MAAOW,SAAS,IACnDoF,GAAoB,CAAEU,OAAQF,EAAIG,OAAO1G,QACxC6F,KAAK,SAAAX,GACCA,EAAS1B,MAAQ0B,EAAS1B,KAAKmD,UAC9B3I,EAAKwI,SAAS,CAAEI,QAAS1B,EAAS1B,KAAKmD,QAASE,IAAK7I,EAAK8I,iBAAiB5B,EAAS1B,KAAKmD,SAAUhG,SAAS,IAExGuE,EAAS1B,KAAKmD,QAAQjD,QAAQ1F,EAAKD,MAAMgJ,gBAAgB,CAAEvH,QAAS,sBAAuBD,KAAM,WAG5GuG,MAAM,SAAAkB,GAAG,OAAIhJ,EAAKwI,SAAS,CAAEI,QAAS,GAAIC,IAAK,EAAGlG,SAAS,OA1B9C3C,EA6BlB8I,iBAAmB,SAACF,GAAD,OAAaK,KAAKJ,IAAIK,MAAMD,KAAML,EAAQO,IAAI,SAAAC,GAAC,OAAKC,SAASD,EAAEE,aAAe,MA7B/EtJ,EA+BlBuJ,SAAW,SAACD,GACR,IAAIE,EAAKH,SAASC,GAAYtJ,EAAKU,MAAMmI,IAAK,IAC9C,OAAOW,GAAK,IAAM,OAAX,GAAAzC,OAAuByC,EAAvB,MA9BPxJ,EAAKU,MAAQ,CACTiC,SAAS,EACT8F,OAAQ,GACRG,QAAS,GACTC,IAAK,GAPK7I,wEAoCV,IAAAyJ,EAAAvJ,KAAAwJ,EAC+BxJ,KAAKQ,MAAlCkI,EADFc,EACEd,QAASjG,EADX+G,EACW/G,QAAS8F,EADpBiB,EACoBjB,OACxB,OACInJ,EAAAC,EAAAC,cAACF,EAAAC,EAAMoK,SAAP,KACIrK,EAAAC,EAAAC,cAACoK,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAAIlH,UAAWmH,IAAOC,UAAW,EAAGC,QAAM,GACpE7K,EAAAC,EAAAC,cAAA,OAAKuD,UAAU,IACXzD,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CAAYH,UAAU,UAAUD,UAAU,KAAKK,QAAQ,MAAvD,yBAGA7D,EAAAC,EAAAC,cAAA,OAAKuD,UAAY,aACbzD,EAAAC,EAAAC,cAACsE,EAAA,EAAD,CAAQvC,KAAK,SAAU4B,QAAQ,YAAYY,MAAM,UAAUhB,UAAU,aAAaqH,QAASlK,KAAKiI,QAAhG,WAIJ7I,EAAAC,EAAAC,cAAA,QAAMuD,UAAU,aAAaK,YAAU,EAAC3B,GAtDnD,aAuDenC,EAAAC,EAAAC,cAAC6K,EAAA,cAAD,CAAeC,QAAS7K,IAAW8K,UAAW,EAAGC,gBAAiB,IAAKjJ,KAAK,OAAO4B,QAAQ,WAAWI,OAAO,SAASC,WAAS,EAAC/B,GAAG,SAAS9C,MAAM,SAAS8E,KAAK,SAAS6E,SAAUpI,KAAKoI,cAIpMhJ,EAAAC,EAAAC,cAAA,OAAOuD,UAAU,SAASgH,GAAI,EAAGC,GAAI,GACjC1K,EAAAC,EAAAC,cAAA,OAAKuD,UAAU,oBACVJ,GAAWrD,EAAAC,EAAAC,cAACwE,EAAA,EAAD,MACXyE,IAAW9F,GAAWrD,EAAAC,EAAAC,cAAA,OAAKuD,UAAU,WACjC6F,EAAQO,IAAI,SAACsB,EAAQC,GAAT,OAAiBpL,EAAAC,EAAAC,cAACmL,GAAD,CAAKC,IAAKH,EAAOhH,KAAMiH,IAAKA,EAAKD,OAAQA,EAAQlB,SAAUE,EAAKF,eAItGjK,EAAAC,EAAAC,cAAA,wBAjEQkC,IAAMmJ,eA0E5BC,GAAM,SAAApM,GAA6B,IAA3B+L,EAA2B/L,EAA3B+L,OAAQC,EAAmBhM,EAAnBgM,IAAKnB,EAAc7K,EAAd6K,SACvB,OACIjK,EAAAC,EAAAC,cAAA,OAAKuD,UAAU,UAAUtB,GAAIiJ,EAAK3G,MAAOa,EAAO8F,IAC5CpL,EAAAC,EAAAC,cAAA,OAAKuD,UAAU,gBAAf,OAAqC0H,EAAOhH,KAA5C,QAAwDnE,EAAAC,EAAAC,cAAA,kCAA0BiL,EAAOnB,aACzFhK,EAAAC,EAAAC,cAAA,OAAKuD,UAAU,eAAe1B,MAAO,CAAC0J,MAAOxB,EAASkB,EAAOnB,YAAahI,gBAAiBsD,EAAO8F,IAAOE,IAAKH,EAAOhH,SASlH5B,qBALS,SAAA0C,GAAK,MAAK,CAC9B5B,QAAS4B,EAAMC,KAAK7B,UAAW,EAC/BwB,QAASI,EAAMC,KAAKL,cAAWjC,IAGK,CAAE6G,gBV3GX,SAAC9J,GAAD,MAAY,CAACsC,KAAM3B,EAAkBX,WU2GrD4C,CAA8CqG,ICpGvD8C,uBACJ,SAAAA,EAAYjL,GAAM,IAAAC,EAAA,OAAAZ,OAAAa,EAAA,EAAAb,CAAAc,KAAA8K,IAChBhL,EAAAZ,OAAAe,EAAA,EAAAf,CAAAc,KAAAd,OAAAgB,EAAA,EAAAhB,CAAA4L,GAAA3K,KAAAH,KAAMH,KAEDW,MAAQ,CACXyD,QAAS,MAJKnE,wEAkBV,IACDmE,EAAWjE,KAAKH,MAAhBoE,QAEL,OACE7E,EAAAC,EAAAC,cAACoK,EAAA,EAAD,CAAM/G,WAAS,EAACC,UAAU,OAAOrB,GAAG,QAC/B0C,EAAU7E,EAAAC,EAAAC,cAACyL,GAAD,MAAoB3L,EAAAC,EAAAC,cAAC0L,EAAD,MAC/B5L,EAAAC,EAAAC,cAAC0E,EAAD,0DAhBwBnE,EAAOW,GACrC,OAAIX,EAAMoE,QAKD,CAACA,QAASpE,EAAMoE,UAHvBpE,EAAMqE,QAAQC,KAAK,UACZ,aAbK3C,IAAMC,YAmCTE,qBAJS,SAAA0C,GAAK,MAAK,CAChCJ,QAASI,EAAMC,KAAKL,cAAWjC,IAGlBL,CAAyBmJ,ICrCnBG,oLACP,OACF7L,EAAAC,EAAAC,cAAC4L,EAAA,gBAAD,CAAiBhH,QAASlE,KAAKH,MAAMqE,SACjC9E,EAAAC,EAAAC,cAAC6L,EAAA,OAAD,KACI/L,EAAAC,EAAAC,cAAC6L,EAAA,MAAD,CAAOC,OAAK,EAACC,KAAK,IAAIzI,UAAWkI,KACjC1L,EAAAC,EAAAC,cAAC6L,EAAA,MAAD,CAAOC,OAAK,EAACC,KAAK,SAASzI,UAAWP,aALnBb,IAAMC,WCE9BkB,GALG,SAAAnE,GAAsB,IAApB6F,EAAoB7F,EAApB6F,MAAOH,EAAa1F,EAAb0F,QACvB,OAAO9E,EAAAC,EAAAC,cAACgM,EAAA,SAAD,CAAUjH,MAAOA,GACpBjF,EAAAC,EAAAC,cAACiM,GAAD,CAAWrH,QAASA,6CCHtBsH,GAAe,CACjB/I,SAAS,EACTwB,QAASyC,EAAQV,IAAI,iBAAchE,GCJvC,IAAIwJ,GAAe,CACfzM,MAAO,CACHuC,QAAS,GACTD,KAAM,SCGd,IAOeoK,GAPKC,aAAgB,CAChCC,OAAQC,wBAAcC,eACtBtJ,KAAMuJ,KACNxH,KFFW,WAAyC,IAA3B9D,EAA2B+E,UAAAC,OAAA,QAAAxD,IAAAuD,UAAA,GAAAA,UAAA,GAArBiG,GAAcO,EAAOxG,UAAAC,OAAA,EAAAD,UAAA,QAAAvD,EACpD,OAAO+J,EAAO1K,MACV,KAAKa,EACD,OAAOhD,OAAAkF,EAAA,EAAAlF,CAAA,GAAIsB,EAAX,CAAkBiC,QAASsJ,EAAOtJ,UACtC,KAAKL,EACD,OAAOlD,OAAAkF,EAAA,EAAAlF,CAAA,GAAIsB,EAAX,CAAkByD,aAASjC,IAC/B,KAAKC,EACD,OAAO/C,OAAAkF,EAAA,EAAAlF,CAAA,GAAIsB,EAAX,CAAkBiC,QAASsJ,EAAOtJ,QAASwB,QAAS8H,EAAOzG,OAC/D,QACI,OAAO9E,IENfoB,YDHW,WAAgD,IAA3BpB,EAA2B+E,UAAAC,OAAA,QAAAxD,IAAAuD,UAAA,GAAAA,UAAA,GAArBiG,GAAcO,EAAOxG,UAAAC,OAAA,EAAAD,UAAA,QAAAvD,EAC3D,OAAO+J,EAAO1K,MACV,KAAK3B,EACD,OAAOR,OAAAkF,EAAA,EAAAlF,CAAA,GAAIsB,EAAX,CAAkBzB,MAAOgN,EAAOhN,QACpC,KAAKY,EACD,OAAOT,OAAAkF,EAAA,EAAAlF,CAAA,GAAIsB,EAAX,CAAkBzB,MAAO,KAC7B,QACI,OAAOyB,mCEZNwL,GAAgB,SAAAzH,GACzB,IAAI0H,EAAI,CAAC1D,OAAQhE,EAAQ2H,UACzB,OAAOpE,GAAKC,QAAQtD,ECLU,UDKuBwH,IEN5CE,GAAoB,4CCUvBC,iBAkCeC,IAlCzB,SAAUD,GAAgBL,GAA1B,IAAAvN,EAAA8G,EAAAhB,EAAA,OAAAgI,GAAAjN,EAAAkN,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACI,OADJF,EAAAE,KAAA,EACUC,aAAI,CAAEtL,KAAMa,EAAoBO,SAAS,IADnD,OAGuB,OAHvB+J,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAG6BvM,aAAK6L,GAAeD,EAAOxH,SAHxD,UAAA/F,EAAAgO,EAAAI,OAGetH,EAHf9G,EAGe8G,OAEmB,IAAfA,EAAKuH,MALxB,CAAAL,EAAAE,KAAA,cAMgBpI,EAAOgB,EAAKmD,QAAQ,MACbnE,EAAKf,MAAQe,EAAKf,KAAKuJ,gBAAkBf,EAAOxH,QAAQ2H,SAASY,cAPxF,CAAAN,EAAAE,KAAA,SASgB,OAThBF,EAAAE,KAAA,GASsBC,aAAI,CAAEtL,KAAM3B,EAAkBX,MAAO,CAACuC,QAAS,sBAAuBD,KAAK,SATjG,QAAAmL,EAAAE,KAAA,qBAUqBpI,IAAQA,EAAKyI,YAAczI,EAAKyI,aAAehB,EAAOxH,QAAQyI,SAVnF,CAAAR,EAAAE,KAAA,SAYgB,OAZhBF,EAAAE,KAAA,GAYsBC,aAAI,CAAEtL,KAAM3B,EAAkBX,MAAO,CAACuC,QAAS,oCAAqCD,KAAK,WAZ/G,QAagB,OAbhBmL,EAAAE,KAAA,GAasBC,aAAI,CAAEtL,KAAMY,EAAgBQ,SAAS,EAAO6C,SAblE,QAegBoB,EAAQuG,IAAI,UAAW3I,GAfvCkI,EAAAE,KAAA,iBAkBgB,OAlBhBF,EAAAE,KAAA,GAkBsBC,aAAI,CAAEtL,KAAM3B,EAAkBX,MAAO,CAACuC,QAAS,oCAAqCD,KAAK,SAlB/G,QAAAmL,EAAAE,KAAA,iBAqBY,OArBZF,EAAAE,KAAA,GAqBkBC,aAAI,CAAEtL,KAAM3B,EAAkBX,MAAO,CAACuC,QAAS,sBAAuBD,KAAK,SArB7F,QAuBQ,OAvBRmL,EAAAE,KAAA,GAuBcC,aAAI,CAAEtL,KAAMa,EAAoBO,SAAS,IAvBvD,QAAA+J,EAAAE,KAAA,iBAyBQ,OAzBRF,EAAAC,KAAA,GAAAD,EAAAU,GAAAV,EAAA,SAAAA,EAAAE,KAAA,GAyBcC,aAAI,CAAEtL,KAAMa,EAAoBO,SAAS,IAzBvD,QA0BQ,OA1BR+J,EAAAE,KAAA,GA0BcC,aAAI,CAAEtL,KAAM3B,EAAkBX,MAAO,CAACuC,QAAUkL,EAAAU,IAASV,EAAAU,GAAM5L,SAAY6K,GAAmB9K,KAAK,SA1BjH,yBAAAmL,EAAAW,SAAAC,GAAA,eAkCe,SAAUf,KAAV,OAAAC,GAAAjN,EAAAkN,KAAA,SAAAc,GAAA,cAAAA,EAAAZ,KAAAY,EAAAX,MAAA,OACX,OADWW,EAAAX,KAAA,EACLY,aAAWnL,EAAYiK,IADlB,wBAAAiB,EAAAF,SAAAI,qBC1CUC,IAAV,SAAUA,KAAV,OAAAlB,GAAAjN,EAAAkN,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACd,OAAAF,EAAAiB,cAAO,CAACpB,MAAR,QADc,wBAAAG,EAAAW,SAAAO,ICOf,IAWerJ,GAXD,SAACH,GACX,IAAMyJ,EAAiBC,eACnBC,EAAaC,aAAgBC,aAAiB7J,GAAUyJ,GAExDtJ,EAAQ2J,aAAYC,GAASC,aAAQL,IAIzC,OAFAF,EAAeQ,IAAIC,IAEZ/J,GCNLH,GAAU2H,cACVxH,GAAQgK,GAASnK,IAEvBoK,IAASC,OACDnP,EAAAC,EAAAC,cAACkP,EAAA,EAAD,KACIpP,EAAAC,EAAAC,cAACmP,GAAD,CAAWpK,MAAOA,GAAOH,QAASA,MAExCkB,SAASsJ,eAAe,S3B+GxB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMlH,KAAK,SAAAmH,GACjCA,EAAaC","file":"static/js/main.0dc58af7.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport TextField from '@material-ui/core/TextField';\n\nexport const renderTextField = ({\n    label,\n    input,\n    meta: { touched, invalid, error, warning },\n    ...custom\n  }) => <TextField label={label} error={touched && invalid} helperText={touched && error} {...input} {...custom} />;","export const SET_LOADING_STATE = \"SET_LOADING_STATE\";\nexport const APP_NOTIFICATION = \"APP_NOTIFICATION\";\nexport const CLEAR_APP_ERROR = \"CLEAR_APP_ERROR\";\n","import React from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { connect } from \"react-redux\";\nimport { clearError } from \"../../store/modules/application/application.action\";\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\n\nclass Snack extends React.Component{\n    constructor(props){\n        super(props);\n\n        this.state = { open: false };\n    }\n\n    handleClose = (event, reason) => {\n        if (reason === 'timeout') { \n            this.props.clearError();\n        }\n    };\n\n    static getDerivedStateFromProps(props, state){\n        if(props.error && props.error.message){\n            return {open:true}\n        }else{\n            return {open:false};\n        }\n    }\n\n    render(){\n        return (\n            <Snackbar\n                anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n                open={this.state.open}\n                onClose={this.handleClose}\n                autoHideDuration={6000}\n                ContentProps={{ 'aria-describedby': 'message-id' }}\n            >\n                <SnackbarContent \n                    style={{ backgroundColor: this.props.error.type }}\n                    message={<span id=\"client-snackbar\">{this.props.error.message}</span>}\n                />\n            </Snackbar>\n          );\n    }\n}\n\nconst mapStateToProps = state => ({ error: state.application.error });\n\nconst mapDispatchToProps = { clearError };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Snack);","import { CLEAR_APP_ERROR, APP_NOTIFICATION } from \"./application.type\";\n\nexport const clearError = () => ({type: CLEAR_APP_ERROR});\nexport const setNotification = (error) => ({type: APP_NOTIFICATION, error});\n","export const REQUIRED = value => (value || typeof value === 'number' ? (typeof value === 'string' && value.trim() === \"\" ? 'Spaces are not allowed as value!' : undefined) : 'This field is required!');","export const USER_SET_TOKEN = \"USER_SET_TOKEN\";\nexport const USER_LOADING_STATE = \"USER_LOADING_STATE\";\nexport const USER_LOGIN = \"USER_LOGIN\";\nexport const USER_LOGOUT = \"USER_LOGOUT\";\n","import React from 'react';\nimport { reduxForm, Field } from \"redux-form\";\nimport { connect } from \"react-redux\";\n/* importing material */\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\n/* importing components */\nimport { renderTextField as InputField } from \"../shared/form/Field\";\nimport Snackbar from \"../shared/Snackbar\";\nimport { REQUIRED } from \"../shared/form/Validation\";\n/* importing actions */\nimport { doLogin } from \"../../store/modules/user/user.action\";\n/* importing css */\nimport \"./style.css\";\n\nconst form = \"loginForm\";\n\nclass UserLogin extends React.Component{\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            loading: false\n        }\n    }\n\n    static getDerivedStateFromProps(props, state){\n        if(props.profile){\n            props.history.push(\"/\");\n            return {...state}\n        }else if(props.loading !== state.loading){\n            return {...state, loading: props.loading}\n        }else{\n            return state;\n        }\n    }\n\n    onSubmit = (form) => {\n        this.props.doLogin(form);\n    }\n    \n    render(){\n        const { handleSubmit } = this.props, {loading} = this.state;\n        return (\n            <div container component=\"main\" id=\"main\">\n                {/* <Grid item xs={false} sm={4} md={7} className=\"left-image\" /> */}\n                {/* <Grid item xs={6} sm={6} md={6} component={Paper} elevation={6} square> */}\n\n                    <div className=\"paper\">\n                        <Avatar className=\"avatar\">\n                            <LockOutlinedIcon />\n                        </Avatar>\n                        <Typography component=\"h1\" variant=\"h5\">\n                            Sign in\n                        </Typography>\n                        <form className=\"login-form\" noValidate id={form} onSubmit={handleSubmit(this.onSubmit)}>\n                            \n                            <Field component={InputField} type=\"text\" variant=\"outlined\" margin=\"normal\" fullWidth id=\"username\" label=\"Username\" name=\"username\" autoComplete=\"username\" autoFocus validate={[REQUIRED]} disabled={loading}/>\n\n                            <Field component={InputField} type=\"password\" variant=\"outlined\" margin=\"normal\" fullWidth id=\"password\" label=\"Password\" name=\"password\" validate={[REQUIRED]} disabled={loading}/>\n                            \n                            <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className=\"submit-btn\" disabled={loading}>\n                                Sign In &nbsp;{loading && <CircularProgress size={24}/>}\n                            </Button>\n                        </form>\n                    </div>\n                {/* </Grid> */}\n\n                <Snackbar />\n            </div>\n        );\n  }\n}\n\nconst mapStateToProps = store => ({\n    loading: store.user.loading || false,\n    profile: store.user.profile || undefined,\n});\n\nexport default connect(mapStateToProps, { doLogin })(reduxForm({form})(UserLogin));","import { USER_LOGIN, USER_LOGOUT } from \"./user.type\";\n\nexport const doLogin = (payload) => ({type: USER_LOGIN, payload });\nexport const doLogout = () => ({type: USER_LOGOUT});\n","export const apiPath = \"https://swapi.co/api/\";\n\nexport const methods = {\n    GET: \"GET\",\n    POST: \"POST\",\n    PUT: \"PUT\",\n    DELETE: \"DELETE\"\n}\n\nexport const colors = [\"green\", \"red\", \"blue\", \"violet\", \"orange\", \"pink\", \"navy\", \"teal\", \"brown\", \"olivedrab\"];","import Cookies from 'universal-cookie';\nimport moment from 'moment';\nconst cookies = new Cookies();\n\nexport default class Session {\n\n\tstatic setCookie(cname, cvalue) {\n\t\tlet expires = new Date(moment().add(3, \"d\"));\n\t\tdocument.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\n\t}\n\t\n\tstatic set(cookie, data, type = 'cookie'){\n\t\tif (type ==='session'){\n\t\t\t/**set data into session storage */\n\t\t\tsessionStorage.setItem(cookie, JSON.stringify(data));\n\t\t} else if (type === 'localstorage') {\n\t\t\t/**set data into local storage */\n\t\t\tlocalStorage.setItem(cookie, JSON.stringify(data));\n\t\t} else{\n\t\t\t/** set data into cookies */\n\t\t\tif(typeof data === 'string'){\n\t\t\t\tthis.setCookie(cookie, data);\n\t\t\t}else{\n\t\t\t\tthis.setCookie(cookie, JSON.stringify(data));\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tstatic get(cookie, type = 'cookie'){\n\t\tlet data;\n\n\t\tif (type === 'session') {\n\t\t\t/** get data from session storage */\n\t\t\tdata = sessionStorage.getItem(cookie);\n\t\t} else if (type === 'localstorage') {\n\t\t\t/** get data from local storage */\n\t\t\tdata = localStorage.getItem(cookie);\n\t\t} else{\n\t\t\t/** get data from cookies */\n\t\t\tdata = cookies.get(cookie);\n\t\t\t\n\t\t}\n\n\t\ttry {\n\t\t\treturn data ? JSON.parse(data) : '';\t\n\t\t} catch (error) {\n\t\t\treturn data || '';\n\t\t}\n\t\t\n\t\t\n\t}\n\n\tstatic clear(cookie, type = 'cookie'){\n\t\tif (type === 'session') {\n\t\t\t/** remove data from session storage */\n\t\t\tsessionStorage.removeItem(cookie);\n\t\t} else if (type === 'localstorage') {\n\t\t\t/** remove data from session storage */\n\t\t\tlocalStorage.removeItem(cookie);\n\t\t} else{\n\t\t\t/** remove data from cookies */\n\t\t\tcookies.remove(cookie);\n\t\t}\n\n\t\treturn true;\n\t}\n}\n","import axios from 'axios';\nimport session from \"./session\";\nimport {apiPath as endpoint} from \"../constant\";\n/*Setting up interceptors with axios*/\n/*it supports add/remove interceptors - 2017dec*/\n// Add a request interceptor\naxios.interceptors.request.use(function (config) {\n    // Do something before request is sent\n    let token;\n    token = session.get(\"token\");\n\n    if (token) {\n        /** appending auth token */\n        config.headers = { \"Authorization\": `bearer ${token.token}` }\n    }\n\n    return config;\n}, function (error) {\n    // Do something with request error\n    return Promise.reject(error);\n})\n\n// Add a response interceptor\naxios.interceptors.response.use(function (response) {\n    // Do something with response data\n    return {\n        statusCode: response.status,\n        data: (typeof response.data === 'boolean' && response.data === false ? 'false' : response.data) || []\n    };\n}, function (error) {\n    if (!error.response && error.message === 'Network Error') {\n        return Promise.reject(\"Couldn't connect to server. Please try again later.\");\n    }\n    // Do something with response error\n    return Promise.reject(error.response.data || \"Server Connection Failed\");\n});\n\n\nexport default class HTTP {\n    static Request(method, url, data = null) {\n        return new Promise((resolve, reject) => {\n            let request = {\n                method,\n                url: endpoint+url,\n                [method.toUpperCase() === 'GET' ? \"params\" : \"data\"]: data,\n                headers: { 'Content-Type': 'application/json' }\n            };\n\n            axios(request) .then(response => resolve(response)) .catch(error => reject(error));\n        });\n    }\n}","import http from \"../../services/http\";\nimport {methods} from \"../../constant\";\nimport { __endpoint_searchPlanets } from \"./endpoint\";\n\nexport const __api_searchPlanets = payload => http.Request(methods.GET, __endpoint_searchPlanets, payload);\n","/* planel  */\nexport const __endpoint_searchPlanets = \"planets/\";\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { colors } from \"../../constant\";\nimport session from \"../../services/session\";\n/* importing material */\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport {DebounceInput} from 'react-debounce-input';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\n\n/* importing actions */\nimport { setNotification } from \"../../store/modules/application/application.action\";\n/* importing api */\nimport { __api_searchPlanets } from \"../../api/planet/api\";\n/* importing css */\nimport \"./style.css\";\n\nconst form = \"loginForm\";\n\nclass UserDashboard extends React.PureComponent{\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            loading: false,\n            search: \"\",\n            planets: [],\n            max: 0\n        }\n    }\n\n    logout = () => {\n        session.clear(\"profile\");\n        window.location.href = \"/\";\n    }\n\n    onChange = (evt) => {\n        this.setState({ search: evt.target.value, loading: true })\n        __api_searchPlanets({ search: evt.target.value})\n        .then(response => {\n            if(response.data && response.data.results){\n                this.setState({ planets: response.data.results, max: this.getMaxPopulation(response.data.results), loading: false });\n\n                if(!response.data.results.length) this.props.setNotification({ message: \"No Planet Found! :(\", type: \"red\"});\n            }\n        })\n        .catch(err => this.setState({ planets: [], max: 0, loading: false }))     \n    }\n\n    getMaxPopulation = (planets) => Math.max.apply(Math, planets.map(o => (parseInt(o.population) || 0)));\n\n    setWidth = (population) => {\n        let w = (parseInt(population)/this.state.max)*100;\n        return w >= 100 ? \"100%\" : `${w}%`;\n    }\n    \n    render(){\n        let { planets, loading, search } = this.state;\n        return (\n            <React.Fragment>\n                <Grid item xs={12} sm={8} md={12} component={Paper} elevation={0} square>\n                    <div className=\"\">\n                        <Typography className=\"heading\" component=\"h1\" variant=\"h5\">\n                            Search for Planets...\n                        </Typography>\n                        <div className = \"container\">\n                            <Button type=\"button\"  variant=\"contained\" color=\"primary\" className=\"submit-btn\" onClick={this.logout}>\n                                Logout\n                            </Button>\n                        </div>\n                        <form className=\"login-form\" noValidate id={form}>\n                            <DebounceInput element={TextField} minLength={1} debounceTimeout={300} type=\"text\" variant=\"outlined\" margin=\"normal\" fullWidth id=\"planet\" label=\"Planet\" name=\"search\" onChange={this.onChange}/>\n                        </form>\n                    </div>\n                </Grid>\n                <div   className=\"result\" sm={4} md={7}>\n                    <div className='spinner-position'>\n                        {loading && <CircularProgress />}\n                        {search && !loading && <div className=\"planets\">\n                            {planets.map((planet, idx) => <Row key={planet.name} idx={idx} planet={planet} setWidth={this.setWidth} />)}\n                        </div>}\n                    </div>\n\n                    <footer>\n            \n                    </footer>\n                </div>\n            </React.Fragment>\n        );\n  }\n}\n\nconst Row = ({planet, idx, setWidth}) => {\n    return(\n        <div className=\"rowcont\" id={idx} color={colors[idx]}>\n            <div className=\"planet-title\">&nbsp;{planet.name} &nbsp;<small>Total Population: {planet.population}</small></div>\n            <div className=\"planet-color\" style={{width: setWidth(planet.population), backgroundColor: colors[idx]}} key={planet.name}></div> \n        </div>\n    );\n}\nconst mapStateToProps = store => ({\n    loading: store.user.loading || false,\n    profile: store.user.profile || undefined,\n});\n\nexport default connect(mapStateToProps, { setNotification })(UserDashboard);","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport {connect} from 'react-redux';\n\n/* importing components */\nimport UserLogin from \"./components/user/user.login\";\nimport UserDashboard from \"./components/user/user.dashboard\";\nimport Snackbar from \"./components/shared/Snackbar\";\nimport \"./App.css\";\n\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n\n    this.state = {\n      profile: null\n    }\n  }\n\n  static getDerivedStateFromProps(props, state){\n    if(!props.profile){\n      /* if user is not logged in  */\n      props.history.push(\"/login\");\n      return null;\n    }else{\n      return {profile: props.profile};\n    }\n  }\n\n  render(){\n    let {profile} = this.props;\n\n    return (\n      <Grid container component=\"main\" id=\"main\">\n          {profile ? <UserDashboard /> : <UserLogin />}\n          <Snackbar />\n      </Grid>\n    );\n  }\n}\n\nconst mapStateToProps = store => ({\n  profile: store.user.profile || undefined,\n});\n\nexport default connect(mapStateToProps)(App);","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport { ConnectedRouter } from \"connected-react-router\";\n\nimport App from '../App';\nimport UserLogin from '../components/user/user.login';\n\nexport default class AppRouter extends React.Component {\n    render() {return (\n            <ConnectedRouter history={this.props.history}>      \n                <Switch>\n                    <Route exact path=\"/\" component={App} />\n                    <Route exact path=\"/login\" component={UserLogin} />\n                </Switch>\n            </ConnectedRouter>\n        );\n    }\n}\n\n","import React from \"react\";\nimport {Provider} from \"react-redux\";\n\nimport AppRoutes from \"../routes\";\n\nconst container = ({store, history}) => {\n    return <Provider store={store}>\n        <AppRoutes history={history}/>\n    </Provider>;\n};\nexport default container; ","/* importing types */\nimport { USER_SET_TOKEN, USER_LOADING_STATE, USER_LOGOUT } from \"./user.type\";\nimport session from \"../../../services/session\";\n\nconst initialState = {\n    loading: false,\n    profile: session.get(\"profile\") || undefined\n}\n\nexport default function User(state=initialState, action){\n    switch(action.type){\n        case USER_LOADING_STATE: \n            return {...state, loading: action.loading};\n        case USER_LOGOUT: \n            return {...state, profile: undefined};\n        case USER_SET_TOKEN: \n            return {...state, loading: action.loading, profile: action.data};\n        default: \n            return state;\n    }\n}\n","import { APP_NOTIFICATION, CLEAR_APP_ERROR } from \"./application.type\";\n\nlet initialState = {\n    error: {\n        message: \"\",\n        type: \"blue\"\n    }\n}\n\nexport default function application(state=initialState, action){\n    switch(action.type){\n        case APP_NOTIFICATION:\n            return {...state, error: action.error};\n        case CLEAR_APP_ERROR:\n            return {...state, error: \"\"};\n        default:\n            return state;\n    }\n}\n","import { combineReducers } from \"redux\";\nimport { connectRouter } from \"connected-react-router\";\nimport {createBrowserHistory as createHistory} from \"history\";\nimport { reducer as formReducer } from \"redux-form\";\n\nimport user from \"./modules/user/user.reducer\";\nimport application from \"./modules/application/application.reducer\";\n\nconst rootReducer = combineReducers({\n    router: connectRouter(createHistory()),\n    form: formReducer,\n    user,\n    application\n});\n\nexport default rootReducer;","import http from \"../../services/http\";\nimport {methods} from \"../../constant\";\nimport { __endpoint_doLogin } from \"./endpoint\";\n\nexport const __api_doLogin = payload => {\n    let q = {search: payload.username};\n    return http.Request(methods.GET, __endpoint_doLogin, q)\n};\n","/* user  */\nexport const __endpoint_doLogin = \"people/\";\n","export const CONNECTION_FAILED = \"Couldn't connect with server\";","import { call, put, takeLatest } from \"redux-saga/effects\";\n/* importing types */\nimport { USER_LOGIN, USER_LOADING_STATE, USER_SET_TOKEN } from \"./user.type\";\nimport { APP_NOTIFICATION } from \"../application/application.type\";\n/* importing api */\nimport { __api_doLogin } from \"../../../api/user/api\";\n/* importinh helpers */\nimport session from \"../../../services/session\";\nimport { CONNECTION_FAILED } from \"../../../constant/error\";\n\nfunction* doLoginRegister(action){\n    yield put({ type: USER_LOADING_STATE, loading: true });\n    try {\n        const {data} = yield call(__api_doLogin, action.payload);\n        /* register user token to cookie */\n        if(data && data.count === 1){\n            let user = data.results[0];\n            if(user && user.name && user.name.toLowerCase() !== action.payload.username.toLowerCase()){\n                /* password matched */\n                yield put({ type: APP_NOTIFICATION, error: {message: \"User doesn't exists\", type:\"red\"} });   \n            }else if(user && user.birth_year && user.birth_year === action.payload.password){\n                /* password matched */\n                yield put({ type: APP_NOTIFICATION, error: {message: \"You've been loggedin successfully\", type:\"green\"} });   \n                yield put({ type: USER_SET_TOKEN, loading: false, data });\n                /* user registered && token received */\n                session.set(\"profile\", user);\n            }else{\n                /* password not matched case */\n                yield put({ type: APP_NOTIFICATION, error: {message: \"You've entered incorrect password\", type:\"red\"} });        \n            }\n        }else{\n            yield put({ type: APP_NOTIFICATION, error: {message: \"User doesn't exists\", type:\"red\"} });    \n        }\n        yield put({ type: USER_LOADING_STATE, loading: false });        \n    } catch (error) {\n        yield put({ type: USER_LOADING_STATE, loading: false });\n        yield put({ type: APP_NOTIFICATION, error: {message: (error && error.message) || CONNECTION_FAILED, type:\"red\"} });\n        \n    }\n}\n\n/**\n * map the dispatched action to the above function\n */\nexport default function* watchUser() {\n    yield takeLatest(USER_LOGIN, doLoginRegister);\n}\n","import watchUser from \"./modules/user/user.saga\";\n\nexport default function* Sagas(){\n\tyield *[watchUser()];\n}","import {compose, createStore, applyMiddleware}  from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { routerMiddleware } from \"react-router-redux\";\n\n// reducer\nimport Reducer from \"./store.reducer\";\n// saga\nimport Saga from \"./store.saga\";\n\nconst store = (history) => {\n    const sagaMiddleware = createSagaMiddleware();\n    let middleware = applyMiddleware(routerMiddleware(history), sagaMiddleware);\n\n    let store = createStore(Reducer, compose(middleware));\n\n    sagaMiddleware.run(Saga);\n\n    return store;\n}\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport {createBrowserHistory as createHistory} from \"history\";\nimport * as serviceWorker from './serviceWorker';\n\n// adding app container\nimport Container from \"./containers\";\n\n// import store\nimport appStore from \"./store\";\nconst history = createHistory();\nconst store = appStore(history);\n\nReactDOM.render(\n        <Router>\n            <Container store={store} history={history} />\n        </Router>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}